@namespace JournalApp
@inherits LayoutComponentBase
@implements IDisposable
@inject ILogger<MainLayout> logger
@inject KeyEventService KeyEventService
@inject NavigationManager NavigationManager
@inject PreferenceService PreferenceService

<MudThemeProvider Theme="_theme" IsDarkMode="PreferenceService.IsDarkMode" DefaultScrollbar />

<MudPopoverProvider />

<MudDialogProvider MaxWidth="MaxWidth.Small"
                   FullWidth="true"
                   NoHeader="false"
                   CloseButton="false"
                   CloseOnEscapeKey="false"
                   Position="DialogPosition.Center" />

<MudSnackbarProvider />

<div class="page">
    @Body
</div>

@code {
    bool _hasInitiallyRendered;

    MudTheme _theme = new()
    {
        PaletteLight = new PaletteLight()
        {
            // Experimental Material Design 3 - Vibrant Purple/Blue system
            Primary = "#6750A4",  // Deep purple - more saturated
            TextPrimary = "#1C1B1F",
            PrimaryContrastText = "#FFFFFF",
            Secondary = "#625B71",  // Purple-gray
            TextSecondary = "#FFFFFF",
            SecondaryContrastText = "#FFFFFF",
            Tertiary = "#7D5260",  // Mauve accent
            TertiaryContrastText = "#FFFFFF",
            Error = "#BA1A1A",
            Background = "#FEF7FF",  // Subtle purple tint
            Surface = "#FEF7FF",
            AppbarBackground = "#6750A4",
            AppbarText = "#FFFFFF",
            Info = "#0061A4",
            Success = "#386A20",
            Warning = "#8B5000",

            HoverOpacity = 0.08,
        },

        PaletteDark = new PaletteDark()
        {
            // Experimental Material Design 3 Dark - High contrast vibrant
            Primary = "#D0BCFF",  // Brighter purple
            TextPrimary = "#E6E1E5",
            PrimaryContrastText = "#371E73",
            Secondary = "#CCC2DC",  // Light purple-gray
            TextSecondary = "#332D41",
            SecondaryContrastText = "#332D41",
            Tertiary = "#EFB8C8",  // Pink accent
            TertiaryContrastText = "#492532",
            Error = "#FFB4AB",
            Background = "#1C1B1F",
            Surface = "#1C1B1F",
            AppbarBackground = "#381E72",
            AppbarText = "#E6E1E5",
            Info = "#9ECAFF",
            Success = "#A3D57E",
            Warning = "#FFB870",

            HoverOpacity = 0.08,
        },

        LayoutProperties = new()
        {
            DefaultBorderRadius = "4px",
        },

        Typography = new()
        {
            Button = new ButtonTypography()
            {
                TextTransform = "none",
            },

            Caption = new CaptionTypography()
            {
                LineHeight = "1",
            },
        },
    };

    protected override void OnInitialized()
    {
        logger.LogDebug("Initializing");
        base.OnInitialized();

        PreferenceService.ThemeChanged += OnThemeChanged;
        App.NewIntent += OnNewIntent;

        if (App.Window is not null) // Not available in tests.
        {
            App.Window.Destroying += (_, _) => Dispose();
        }

        // All pages have been reloaded so we should clear any leftover subscriptions.
        KeyEventService.ResetStack();

        // Start import.
        if (App.ActivatedFilePath != null)
        {
            logger.LogDebug($"Activated by file <{App.ActivatedFilePath}>");
            NavigationManager.NavigateTo($"/settings", false, true);
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            _hasInitiallyRendered = true;
        }
    }

    public void OnThemeChanged(object sender, bool isDarkMode)
    {
        if (_hasInitiallyRendered)
            StateHasChanged();
    }

    void OnNewIntent(object sender, EventArgs e)
    {
        logger.LogDebug("New intent");
        NavigationManager.NavigateTo($"/settings", true, true);
    }

    public void Dispose()
    {
        PreferenceService.ThemeChanged -= OnThemeChanged;
        App.NewIntent -= OnNewIntent;
    }
}
