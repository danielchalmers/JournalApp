@namespace JournalApp
@inject PreferenceService PreferenceService

<div class="@GetContainerClass()" style="background-color: @(PreferenceService.GetMoodColor(Day.Emoji));">
    <div class="@GetContentClass()" @onclick="this.AsNonRenderingEventHandler(async () => await DayClicked.InvokeAsync(Day.Date))">
        @if (Day.Date != null)
        {
            <span class="calendar-day-number">
                @Day.Date.Value.Day
            </span>

            <span class="calendar-day-emoji">
                @Day.Emoji
            </span>
        }
    </div>
</div>

@code {
    [Parameter]
    public GridDay Day { get; set; }

    [Parameter]
    public DateOnly OpenToDate { get; set; }

    [Parameter]
    public EventCallback<DateOnly?> DayClicked { get; set; }

    private string GetContainerClass()
    {
        return Day.Date == OpenToDate 
            ? "calendar-day-cell calendar-day-current" 
            : "calendar-day-cell";
    }

    private string GetContentClass()
    {
        return Day.Emoji == null 
            ? "calendar-day-content calendar-day-empty" 
            : "calendar-day-content calendar-day-with-mood";
    }
}
