// <auto-generated />
using System;
using JournalApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JournalApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231028224027_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.6.23329.4");

            modelBuilder.Entity("JournalApp.DataPoint", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Bool")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("CategoryGuid")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DayGuid")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("MedicationDose")
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicationUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mood")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Number")
                        .HasColumnType("REAL");

                    b.Property<int?>("ScaleIndex")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("SleepHours")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Guid");

                    b.HasIndex("CategoryGuid");

                    b.HasIndex("DayGuid");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("JournalApp.DataPointCategory", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Deleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Group")
                        .HasColumnType("TEXT");

                    b.Property<int>("Index")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("MedicationDose")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("MedicationEveryDaySince")
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicationUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ReadOnly")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Guid");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("JournalApp.Day", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("Guid");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("JournalApp.DataPoint", b =>
                {
                    b.HasOne("JournalApp.DataPointCategory", "Category")
                        .WithMany("Points")
                        .HasForeignKey("CategoryGuid");

                    b.HasOne("JournalApp.Day", "Day")
                        .WithMany("Points")
                        .HasForeignKey("DayGuid");

                    b.Navigation("Category");

                    b.Navigation("Day");
                });

            modelBuilder.Entity("JournalApp.DataPointCategory", b =>
                {
                    b.Navigation("Points");
                });

            modelBuilder.Entity("JournalApp.Day", b =>
                {
                    b.Navigation("Points");
                });
#pragma warning restore 612, 618
        }
    }
}
