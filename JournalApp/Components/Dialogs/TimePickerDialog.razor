@namespace JournalApp
@inject ILogger<EditTextDialog> logger
@inject IDialogService DialogService
@inject PageService PageService

<MudDialog DefaultFocus="DefaultFocus.FirstChild" OnBackdropClick="Submit">
	<DialogContent>
		<MudTimePicker PickerVariant="PickerVariant.Static" @bind-Time="Time" />
	</DialogContent>
</MudDialog>

@code {
	[CascadingParameter] MudDialogInstance MudDialog { get; set; }

	[Parameter]
	public string Title { get; set; }

	[Parameter]
	public TimeSpan? Time { get; set; }

	public string Text { get; set; }

	protected override void OnInitialized()
	{
		base.OnInitialized();

		PageService.EnteredPage(() => Submit());
	}

	void Cancel()
	{
		PageService.CancelDialog(MudDialog);
	}

	void Submit()
	{
		PageService.CloseDialog(MudDialog, Time);
	}

	public static async Task<TimeSpan?> ShowDialog(IDialogService dialogService, TimeSpan? time)
	{
		var parameters = new DialogParameters<TimePickerDialog> {
			{ x => x.Time, time },
		};

		var result = await dialogService.Show<TimePickerDialog>(parameters).Result;

		return result.Canceled ? null : (TimeSpan?)result.Data;
	}
}