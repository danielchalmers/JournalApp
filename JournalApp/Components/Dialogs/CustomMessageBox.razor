@namespace JournalApp
@inherits MudComponentBase

<MudDialog @attributes="UserAttributes" Class="@Classname" OnBackdropClick="OnBackdropClick">
	<TitleContent>
		@if (TitleContent is null)
		{
			<MudText Typo="Typo.h6">@Title</MudText>
		}
		else
		{
			@TitleContent
		}
	</TitleContent>
	<DialogContent>
		<div style="padding-top: 8px;">
			@if (MessageContent is not null)
			{
				@MessageContent
			}
			else
			{
				@MarkupMessage
				@Message
			}
		</div>
	</DialogContent>
	<DialogActions>
		<div class="@("d-flex align-center justify-space-between" + (ShowFeedbackLink ? " flex-grow-1" : ""))">
			@if (ShowFeedbackLink)
			{
				<MudLink Href="@(Feedback.GenerateLink(body: $"\"{Message}\""))" Typo="Typo.subtitle2">Send feedback...</MudLink>
			}

			<div tabindex="-1" @onkeydown="HandleKeyDown">
				<MudFocusTrap DefaultFocus="DefaultFocus.LastChild">
					@if (CancelButton is not null)
					{
						<CascadingValue Value="@_cancelCallback">
							@CancelButton
						</CascadingValue>
					}
					else if (!string.IsNullOrWhiteSpace(CancelText))
					{
						<MudButton OnClick="OnCancelClicked">@CancelText</MudButton>
					}
					@if (NoButton is not null)
					{
						<CascadingValue Value="@_noCallback">
							@NoButton
						</CascadingValue>
					}
					else if (!string.IsNullOrWhiteSpace(NoText))
					{
						<MudButton OnClick="OnNoClicked">@NoText</MudButton>
					}
					@if (YesButton is not null)
					{
						<CascadingValue Value="@_yesCallback">
							@YesButton
						</CascadingValue>
					}
					else if (!string.IsNullOrWhiteSpace(YesText))
					{
						<MudButton Color="Color.Primary" OnClick="OnYesClicked">@YesText</MudButton>
					}
				</MudFocusTrap>
			</div>
		</div>
	</DialogActions>
</MudDialog>