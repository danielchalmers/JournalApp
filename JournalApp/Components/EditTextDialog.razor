@namespace JournalApp
@inject IDialogService DialogService

<MudDialog DefaultFocus="DefaultFocus.FirstChild">
	<TitleContent>
		<div class="page-header">
			<MudIconButton Icon="@Icons.Material.Filled.ArrowBack" OnClick="Submit" />

			<MudText Typo="Typo.h6">@DataPoint.CreatedAt.ToString("ddd, MMM d h:mm tt")</MudText>
		</div>
	</TitleContent>

	<DialogContent>
		<MudTextField @bind-Value="DataPoint.Text" Lines="12" Class="mt-n6" DisableUnderLine="true" />
	</DialogContent>
</MudDialog>

@code {
	[CascadingParameter] MudDialogInstance MudDialog { get; set; }

	[Parameter]
	public DataPoint DataPoint { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		MudDialog.CloseIcon = Icons.Material.Filled.Check;
	}

	void Submit()
	{
		MudDialog.Close(DialogResult.Ok(true));
	}

	public static async Task ShowDialog(IDialogService dialogService, DataPoint dataPoint)
	{
		var parameters = new DialogParameters { { nameof(EditTextDialog.DataPoint), dataPoint } };
		var options = new DialogOptions { FullWidth = true, };

		await dialogService.Show<EditTextDialog>(parameters, options).Result;

		if (string.IsNullOrWhiteSpace(dataPoint.Text))
			dataPoint.IsDeleted = true;
	}
}