@namespace JournalApp
@inject IDialogService DialogService

<MudDialog>
	<DialogContent>
		<MudTextField @ref="_textField" @bind-Value="DataPoint.Text" Lines="12" Class="mt-n6" DisableUnderLine="true" />
	</DialogContent>
</MudDialog>

@code {
	MudTextField<string> _textField;

	[CascadingParameter] MudDialogInstance MudDialog { get; set; }

	[Parameter]
	public DataPoint DataPoint { get; set; }

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await _textField.FocusAsync();
		}
	}

	void Submit()
	{
		MudDialog.Close(DialogResult.Ok(true));
	}

	public static async Task ShowDialog(IDialogService dialogService, DataPoint dataPoint)
	{
		var parameters = new DialogParameters { { nameof(EditTextDialog.DataPoint), dataPoint } };
		var options = new DialogOptions { CloseButton = true };

		await dialogService.Show<EditTextDialog>(dataPoint.CreatedAt.ToString("ddd, MMM d h:mm tt"), parameters, options).Result;

		if (string.IsNullOrWhiteSpace(dataPoint.Text))
			dataPoint.IsDeleted = true;
	}
}