@namespace JournalApp
@inject ApplicationDbContext db
@inject IDialogService DialogService

<MudDialog>
	<DialogContent>
		<MudDataGrid Items="db.DataPointCategories" SortMode="SortMode.None" ReadOnly="false" EditMode="DataGridEditMode.Cell" Dense="true" Elevation="0">
			<Columns>
				<PropertyColumn Property="x => x.Name" />

				<PropertyColumn Property="x => x.Index" />

				<PropertyColumn Property="x => x.Enabled">
					<EditTemplate>
						<MudSwitch @bind-Checked="context.Item.Enabled" />
					</EditTemplate>
				</PropertyColumn>

				<PropertyColumn Property="x => x.Type">
					<EditTemplate>
						<MudSelect @bind-Value="context.Item.Type" Required Margin="Margin.Dense">
							@foreach (var item in Enum.GetValues<DataType>())
							{
								<MudSelectItem Value="@item">@item</MudSelectItem>
							}
						</MudSelect>
					</EditTemplate>
				</PropertyColumn>
			</Columns>
		</MudDataGrid>
	</DialogContent>

	<DialogActions>
		<MudButton Color="Color.Secondary" OnClick="New">Create a new category...</MudButton>

		<MudButton Color="Color.Primary" OnClick="Submit">Done</MudButton>
	</DialogActions>
</MudDialog>

@code {
	[CascadingParameter] MudDialogInstance MudDialog { get; set; }

	async Task New()
	{
		var result = await DialogService.Show<NewCategory>().Result;

		if (result.Canceled)
			return;

		var newCategory = (DataPointCategory)result.Data;
		newCategory.Index = db.DataPointCategories.Max(x => x.Index) + 1;

		db.DataPointCategories.Add(newCategory);
		await db.SaveChangesAsync();
	}

	async Task Submit()
	{
		await db.SaveChangesAsync();
		MudDialog.Close(DialogResult.Ok(true));
	}
}