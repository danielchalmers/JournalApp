@namespace JournalApp
@inject IDialogService DialogService
@inject KeycodeService KeycodeService

<MudDialog DefaultFocus="DefaultFocus.FirstChild" OnBackdropClick="Submit">
	<TitleContent>
		<div class="page-header">
			<MudIconButton Icon="@Icons.Material.Filled.ArrowBack" OnClick="Cancel" />

			<MudText Typo="Typo.h6">Change day's dose</MudText>

			<MudSpacer />

			<MudIconButton Icon="@Icons.Material.Filled.Check" OnClick="Submit" />
		</div>
	</TitleContent>

	<DialogContent>
		<MudText>@DataPoint.Category.Name:</MudText>

		<div class="d-flex align-center" style="gap:1em;">
			<MudNumericField @bind-Value="Dose" HideSpinButtons Label="Dose" MaxLength="6" />

				<MudText>@DataPoint.MedicationUnit</MudText>
			</div>
		</DialogContent>
	</MudDialog>

	@code {
	DataPoint _dataPoint;

	[CascadingParameter] MudDialogInstance MudDialog { get; set; }

	[Parameter]
	public DataPoint DataPoint
	{
		get => _dataPoint;
		set
		{
			_dataPoint = value;
			Dose = value?.MedicationDose;
		}
	}

	public decimal? Dose { get; set; }

	protected override void OnInitialized()
	{
		base.OnInitialized();

		KeycodeService.SubscribeOnceToBackButtonPressed(() => Cancel());
	}

	void Cancel()
	{
		MudDialog.Close(DialogResult.Cancel());
	}

	void Submit()
	{
		if (Dose == decimal.Zero)
			Dose = null;

		DataPoint.MedicationDose = Dose;
		DataPoint.Bool = Dose != null;

		MudDialog.Close(DialogResult.Ok(true));
	}

	public static async Task ShowDialog(IDialogService dialogService, DataPoint dataPoint)
	{
		var parameters = new DialogParameters<EditDoseDialog> { { x => x.DataPoint, dataPoint } };
		await dialogService.Show<EditDoseDialog>(parameters).Result;
	}
}