@namespace JournalApp
@page "/"
@inject ApplicationDbContext db;

@*TODO: DynamicComponent ??*@
<AntList DataSource="@db.Entries">
	<Header>
		<Affix OffsetTop="10">
			<div>
				Your journal
			</div>
		</Affix>
	</Header>

	<ChildContent>
		@if (!@context.IsDeleted)
		{
			@if (@context.GetType() == typeof(Note))
			{
				<ListItem>
					<NoteCard Note="@((Note)context)" />
				</ListItem>
			}
			else
			{
				<ListItem>
					<p>@(context.Date.ToString())</p>
				</ListItem>
			}
		}
	</ChildContent>
</AntList>

<Dropdown Class="floating-action-button" Placement="@Placement.TopRight">
	<Overlay>
		<Menu>
			<MenuItem Icon="@IconType.Outline.FileAdd" OnClick="@(() => NewNote())">
				New note
			</MenuItem>
		</Menu>
	</Overlay>
	<ChildContent>
		<Button Type="@ButtonType.Primary" Shape="@ButtonShape.Circle" Icon="@IconType.Outline.FileAdd" OnClick="@(() => NewNote())" />
	</ChildContent>
</Dropdown>

@code {
	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
	}

	void NewNote()
	{
		db.Entries.Add(new JournalEntry { Date = DateTime.Now });
	}
}