@namespace JournalApp
@page "/"
@inject ApplicationDbContext db;

<Layout>
	<Header Class="app-header">
		<Row>
			<Col Flex=@("none")>
			<span style="color: red;">JournalApp </span>
			<Icon Type="@IconType.Outline.Smile" Theme="@IconThemeType.Twotone" TwotoneColor="#eb2f96" />
			</Col>

			<Col Flex=@("auto") />

			<Col Flex=@("none")>
			<Dropdown Placement="@Placement.TopRight">
				<ChildContent>
					<Button Type="@ButtonType.Primary" Icon="@IconType.Outline.Plus" />
				</ChildContent>

				<Overlay>
					<Menu>
						<MenuItem Icon="@IconType.Outline.FileAdd" OnClick="@(() => NewNote())">
							<span> New note</span>
						</MenuItem>
					</Menu>
				</Overlay>
			</Dropdown>
			</Col>
		</Row>
	</Header>

	<Content Class="app-body">
		<AntList DataSource="@db.Entries" Grid="grid">
			@if (!@context.IsDeleted)
			{
				@if (@context.GetType() == typeof(Note))
				{
					<ListItem>
						<NoteCard Note="@((Note)context)" />
					</ListItem>
				}
				else
				{
					<ListItem>
						<p>@(context.Date.ToString())</p>
					</ListItem>
				}
			}
		</AntList>
	</Content>
</Layout>

@code {
	ListGridType grid = new()
    {
        Gutter = 16,
        Xs = 1,
        Sm = 1,
        Md = 2,
        Lg = 2,
        Xl = 4,
        Xxl = 4,
    };

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
	}

	void NewNote()
	{
		db.Entries.Add(new JournalEntry { Date = DateTime.Now });
		db.SaveChanges();
	}
}