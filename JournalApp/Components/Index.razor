@namespace JournalApp
@page "/"
@inherits LayoutComponentBase
@inject ApplicationDbContext db
@inject ISnackbar SnackbarService

<MudThemeProvider IsDarkMode="true" />
<MudDialogProvider />
<MudSnackbarProvider />

<div id="main-header">
	<MudAppBar Color="Color.Primary" Fixed="false" Dense="true">
		<MudText>🙂 @ThisAssembly.AssemblyTitle</MudText>

		<MudSpacer />
	</MudAppBar>

	<div class="d-flex justify-center align-center gap-4" style="margin:1em">
		<MudIconButton Icon="@Icons.Material.Outlined.ArrowBack" aria-label="previous" OnClick="PreviousDay" Disabled="@(day.Date.DayNumber <= 1)" />

		<MudText Typo="Typo.h5">@day.Date.ToString("ddd, MMM d")</MudText>

		<MudIconButton Icon="@Icons.Material.Outlined.ArrowForward" aria-label="next" OnClick="NextDay" Disabled="@(day.Date > DateOnly.FromDateTime(DateTime.Now))" />
	</div>

	<MudDivider />
</div>

<div id="main-body">
	<MudStack id="main-timeline">
		<MultiDataPoints DataPoints="day.DataPoints" />

		<MudDivider />

		<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Comment" OnClick="NewNote">New note</MudButton>

		<MultiDataPoints DataPoints="day.Notes" />
	</MudStack>
</div>

@code {
	Day day;

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		day = await db.GetDay(DateTime.Now);
	}

	void NewNote()
	{
		day.AddNewNote();
	}

	async Task PreviousDay()
	{
		day = await db.GetPreviousDay(day);
	}

	async Task NextDay()
	{
		day = await db.GetNextDay(day);
	}
}