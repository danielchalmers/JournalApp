@namespace JournalApp
@using System.Globalization;
@inject ApplicationDbContext db
@inject IDialogService DialogService

<MudDialog>
	<DialogContent>
		<div class="mood-grid">
			<MudText Typo="Typo.h3">@StartDate.Year</MudText>

			@foreach (var group in DaysInRange.GroupBy(x => x.Date.Month))
			{
				<MudText Typo="Typo.h4">@(CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(group.Key))</MudText>

				<div class="d-flex flex-row flex-wrap">
					@foreach (var day in group)
					{
						<div class="mood-block" style="background-color:@day.Color;">
							<b>@day.Date.Day</b>
							@day.Emoji
						</div>
					}
				</div>
			}
		</div>
	</DialogContent>
</MudDialog>

@code {
	[CascadingParameter] MudDialogInstance MudDialog { get; set; }

	DateOnly StartDate { get; set; } = new(DateTime.Now.Year, 1, 1);
	DateOnly EndDate { get; set; } = new(DateTime.Now.Year, 12, 31);
	List<DayGridItem> DaysInRange { get; set; }

	protected override void OnInitialized()
	{
		base.OnInitialized();

		var moodCategory = db.Categories.FirstOrDefault(x => x.Enabled && x.Type == DataType.Mood);

		DaysInRange = new();

		for (DateOnly date = StartDate; date <= EndDate; date = date.AddDays(1))
		{
			var moodDataPoint = moodCategory?.DataPoints?.FirstOrDefault(x => x.Day.Date == date);
			var emoji = moodDataPoint?.Mood;
			var color = GetMoodColor(emoji);

			DaysInRange.Add(new(date, emoji, color));
		}
	}

	string GetMoodColor(string emoji) => emoji switch
	{
		// https://www.colorhexa.com/0091ea-to-ff6d00
		"😁" => "#0091ea",
		"😀" => "#2b8bc3",
		"🙂" => "#55859c",
		"😐" => "#807f75",
		"🙁" => "#aa794e",
		"😢" => "#d47327",
		"😭" => "#ff6d00",
		_ => "transparent"
	};

	private record DayGridItem(DateOnly Date, string Emoji, string Color);
}