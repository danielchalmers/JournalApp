@namespace JournalApp
@inject ApplicationDbContext db
@inject IDialogService DialogService

<MudDialog>
	<DialogContent>
		<div class="d-flex flex-row flex-wrap">
			@foreach (var day in DaysInRange)
			{
				<div style="width:3em;height:3em;background-color:@day.Color;">
					<b>@day.Date.DayOfYear</b>
				</div>
			}
		</div>
	</DialogContent>
</MudDialog>

@code {
	[CascadingParameter] MudDialogInstance MudDialog { get; set; }

	DateOnly StartDate { get; set; } = new(DateTime.Now.Year, 1, 1);
	DateOnly EndDate { get; set; } = new(DateTime.Now.Year, 12, 31);
	List<DayGridItem> DaysInRange { get; set; }

	protected override void OnInitialized()
	{
		base.OnInitialized();

		var moodCategory = db.Categories.FirstOrDefault(x => x.Enabled && x.Type == DataType.Mood);

		DaysInRange = new();

		for (DateOnly date = StartDate; date <= EndDate; date = date.AddDays(1))
		{
			var emoji = moodCategory?.DataPoints?.FirstOrDefault(x => x.Day.Date == date)?.Mood;
			var color = emoji switch
			{
				// https://www.colorhexa.com/0091ea-to-ff6d00
				"😁" => "#0091ea",
				"😀" => "#2b8bc3",
				"🙂" => "#55859c",
				"😐" => "#807f75",
				"🙁" => "#aa794e",
				"😢" => "#d47327",
				"😭" => "#ff6d00",
				_ => "transparent"
			};

		DaysInRange.Add(new(date, emoji, color));
		}
	}

	private record DayGridItem(DateOnly Date, string Emoji, string Color);
}