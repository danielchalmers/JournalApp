@namespace JournalApp
@inject ILogger<AboutDialog> logger
@inject IDialogService DialogService
@inject PageService PageService
@inject IJSRuntime JSRuntime

<MudDialog DefaultFocus="DefaultFocus.Element">
	<TitleContent>
		<div class="page-header">
			<MudIconButton Icon="@Icons.Material.Filled.ArrowBack" Title="Close" OnClick="Close" />

			<MudText Typo="Typo.h6">About JournalApp</MudText>
		</div>
	</TitleContent>

	<DialogContent>
		<MudTextField @ref="creditsField" T="string" AutoGrow ReadOnly DisableUnderLine />
	</DialogContent>
</MudDialog>

@code {
	[CascadingParameter] MudDialogInstance MudDialog { get; set; }

	MudTextField<string> creditsField;

	protected override void OnInitialized()
	{
		base.OnInitialized();

		PageService.EnteredPage(Close);
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			// https://github.com/MudBlazor/MudBlazor/issues/7839.
			await creditsField.SetText(await GetCreditsText());
		}

		await base.OnAfterRenderAsync(firstRender);
	}

	void Close()
	{
		PageService.CloseDialog(MudDialog, true);
	}

	public async Task<string> GetCreditsText()
	{
		logger.LogInformation("Getting credits stream");

		using var stream = await FileSystem.OpenAppPackageFileAsync("Credits.txt");
		using var reader = new StreamReader(stream);

		logger.LogInformation("Reading credits as text");
		return reader.ReadToEnd();
	}
}