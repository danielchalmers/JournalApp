@namespace JournalApp

<div class="trends-container">
	@foreach (var (category, dayPoints) in Points)
	{
		<MudText Typo="Typo.h6">
			@category.Name
		</MudText>

		<div class="trend-view">
			@switch (PointType)
			{
				case PointType.Mood:
					foreach (var (day, point) in dayPoints)
					{
						<MudText Typo="Typo.caption">@(point?.Mood ?? day.ToString())</MudText>
					}
					break;
				case PointType.Sleep:
					<MudChart ChartType="ChartType.Line" ChartSeries="@GetSleepSeries(category)" Height="15em"></MudChart>
					break;
			}
		</div>
	}
</div>

@code {
	[Parameter]
	public PointType PointType { get; set; }

	[Parameter]
	public IReadOnlyDictionary<DataPointCategory, IReadOnlyDictionary<int, DataPoint>> Points { get; set; }

	List<ChartSeries> GetSleepSeries(DataPointCategory category)
	{
		return new()
		{
			new()
			{
				Name = category.Name,
				Data = Points[category].Select(x => (double)(x.Value?.SleepHours ?? 0)).ToArray(),
			}
		};
	}
}
