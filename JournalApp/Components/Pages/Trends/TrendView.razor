@namespace JournalApp

<div class="trend-view">
	@switch (Category.Type)
	{
		case PointType.Mood:
			foreach (var (day, point) in Points)
			{
				<MudText Typo="Typo.caption">@(point?.Mood ?? day.ToString())</MudText>
			}
			break;
		case PointType.Sleep:
			<MudChart ChartType="ChartType.Line" ChartSeries="@GetSleepSeries()" Height="15em" Width="100%" Style="width:100%;"></MudChart>
			break;
		case PointType.Number:
			<MudChart ChartType="ChartType.Line" ChartSeries="@GetNumberSeries()" Height="15em" Width="100%" Style="width:100%;"></MudChart>
			break;
	}
</div>

@code {
	[Parameter]
	public DataPointCategory Category { get; set; }

	[Parameter]
	public IReadOnlyDictionary<int, DataPoint> Points { get; set; }

	public static bool IsSupported(PointType type) =>
		type is PointType.Mood or PointType.Sleep or PointType.Number;

	List<ChartSeries> GetSleepSeries()
	{
		return new()
		{
			new()
			{
				Name = Category.Name,
				Data = Points.Select(x => (double)(x.Value?.SleepHours ?? 0)).ToArray(),
			}
		};
	}

	List<ChartSeries> GetNumberSeries()
	{
		return new()
		{
			new()
			{
				Name = Category.Name,
				Data = Points.Select(x => x.Value?.Number ?? 0d).ToArray(),
			}
		};
	}
}
