@namespace JournalApp

<div class="switcher">
	<MudIconButton Icon="@Icons.Material.Filled.ArrowBackIos" Title="Previous month" OnClick="GoPrevious" />

	<div class="switcher-header">
		<MudButton OnClick="() => SelectedMonth = CurrentNextMonth">
			<MudText Typo="Typo.h5">@(HeaderText)</MudText>
		</MudButton>
	</div>

	<MudIconButton Icon="@Icons.Material.Filled.ArrowForwardIos" Title="Next month" OnClick="GoNext" Disabled="@(NextMonth > CurrentNextMonth)" />
</div>

@code {
	DateOnly _selectedMonth;
	IReadOnlyList<DateOnly> _selectedDates;

	string HeaderText => SelectedMonth == CurrentNextMonth ? "Last 30 Days" : SelectedMonth.ToString("MMM yyyy");

	DateOnly CurrentMonth => new DateOnly(DateTime.Now.Year, DateTime.Now.Month, 1);
	DateOnly CurrentNextMonth => CurrentMonth.AddMonths(1);
	DateOnly PreviousMonth => _selectedMonth.AddMonths(-1);
	DateOnly NextMonth => _selectedMonth.AddMonths(1);

	[Parameter]
	public DateOnly SelectedMonth
	{
		get => _selectedMonth;
		set
		{
			_selectedMonth = value;

			var dates = new List<DateOnly>();

			if (SelectedMonth == CurrentNextMonth)
			{
				var nowDate = DateOnly.FromDateTime(DateTime.Now);

				for (int i = 0; i > -30; i--)
					dates.Add(nowDate.AddDays(i));
			}
			else
			{
				for (int i = 1; i <= DateTime.DaysInMonth(value.Year, value.Month); i++)
					dates.Add(new DateOnly(value.Year, value.Month, i));
			}

			SelectedMonthChanged.InvokeAsync(value);
			SelectedDates = dates;
		}
	}

	[Parameter]
	public EventCallback<DateOnly> SelectedMonthChanged { get; set; }

	[Parameter]
	public DateOnly OpenToDate { get; set; }

	[Parameter]
	public IReadOnlyList<DateOnly> SelectedDates
	{
		get => _selectedDates;
		set
		{
			_selectedDates = value;
			SelectedDatesChanged.InvokeAsync(SelectedDates);
		}
	}

	[Parameter]
	public EventCallback<IReadOnlyList<DateOnly>> SelectedDatesChanged { get; set; }

	protected override void OnInitialized()
	{
		base.OnInitialized();

		SelectedMonth = new DateOnly(OpenToDate.Year, OpenToDate.Month, 1);
	}

	void GoPrevious()
	{
		SelectedMonth = PreviousMonth;
	}

	void GoNext()
	{
		SelectedMonth = NextMonth;
	}
}
