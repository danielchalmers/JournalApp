@namespace JournalApp
@inject AppDbContext db
@inject ILogger<TrendsDialog> logger
@inject IDialogService DialogService
@inject KeycodeService KeycodeService

<MudDialog DefaultFocus="DefaultFocus.None">
	<TitleContent>
		<div class="page-header">
			<MudIconButton Icon="@Icons.Material.Filled.ArrowBack" OnClick="Submit" />

			<MudText Typo="Typo.h6">Trends</MudText>
		</div>

		<TrendsSwitcher @bind-SelectedDate="SelectedDate" />
	</TitleContent>

	<DialogContent>
		@foreach (var (type, points) in _points)
		{
			@if (type is PointType.Mood)
			{
				<TrendView PointType="type" Points="points" />
			}
		}
	</DialogContent>
</MudDialog>

@code {
	Dictionary<PointType, IReadOnlyDictionary<DataPointCategory, IReadOnlyDictionary<int, DataPoint>>> _points;
	DateOnly _selectedDate;

	[CascadingParameter] MudDialogInstance MudDialog { get; set; }

	[Parameter]
	public DateOnly OpenToDate { get; set; }

	public DateOnly SelectedDate
	{
		get => _selectedDate;
		set
		{
			_selectedDate = value;

			// Group data points by type, category and day of month.
			_points = new();
			foreach (var group in db.Categories.Where(x => x.Enabled && !x.Deleted).GroupBy(x => x.Type))
			{
				var categoryDictionary = new Dictionary<DataPointCategory, IReadOnlyDictionary<int, DataPoint>>();
				foreach (var category in group)
				{
					var dayPoints = new Dictionary<int, DataPoint>();

					// Each day has either a matching data point or null.
					for (int day = 0; day < DateTime.DaysInMonth(value.Year, value.Month); day++)
					{
						var point = category.Points.FirstOrDefault(p => p.Day.Date.Year == value.Year && p.Day.Date.Month == value.Month && p.Day.Date.Day == day);
						dayPoints.Add(day, point);
					}

					categoryDictionary.Add(category, dayPoints);
				}
				_points.Add(group.Key, categoryDictionary);
			}
		}
	}

	protected override void OnInitialized()
	{
		base.OnInitialized();

		KeycodeService.SubscribeOnceToBackButtonPressed(() => Submit());

		logger.LogInformation($"Opened to {OpenToDate}");
		SelectedDate = new(OpenToDate.Year, OpenToDate.Month, 1);
	}

	void Submit()
	{
		MudDialog.Close(DialogResult.Ok(true));
	}
}