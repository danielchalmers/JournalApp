@namespace JournalApp
@inject ILogger<WorksheetView> logger

<div class="worksheet-view">
    <MudButton OnClick="OnResourceClicked" StartIcon="@Icons.Material.Filled.Link" Color="Color.Primary" Disabled="@IsLinkDisabled" title="View worksheet">
        <MudText Typo="Typo.h5">@Worksheet.Title</MudText>
    </MudButton>

    @if (!string.IsNullOrEmpty(Worksheet.Description))
    {
        <MudText Typo="Typo.body1">@Worksheet.Description</MudText>
    }

    @if (!string.IsNullOrEmpty(Worksheet.SourceUri))
    {
        <MudLink Href="@Worksheet.SourceUri" Typo="Typo.caption" Color="Color.Default" Style="word-wrap: anywhere" title="Go to source">@PrettySourceUri</MudLink>
    }
</div>

@code {
    [Parameter]
    public Worksheet Worksheet { get; set; }

    [Parameter]
    public EventCallback ResourceClicked { get; set; }

    public bool IsLinkDisabled => string.IsNullOrWhiteSpace(Worksheet.Uri);

    public string PrettySourceUri => Worksheet.SourceUri.Replace("http://", "").Replace("https://", "").Replace("www.", "");

    async Task OnResourceClicked()
    {
        logger.LogInformation($"Clicked <{Worksheet.Title}> and going to <{Worksheet.Uri}>");
        await Browser.Default.OpenAsync(Worksheet.Uri);

        if (ResourceClicked.HasDelegate)
            await ResourceClicked.InvokeAsync();
    }
}
