@namespace JournalApp
@using System.ComponentModel.DataAnnotations
@using System.Text.Json
@inject IDialogService DialogService
@inject FocusService FocusService

<MudCard>
	<MudCardContent>
		<div class="d-flex justify-center">
			<MudText Typo="Typo.caption">@Model.Date.ToString()</MudText>
		</div>

		@if (@Model is Note note)
		{
			<MudTextField Lines="@(Full ? 6 : 3)" Placeholder="What's on your mind?" @bind-Value="note.Text" @onfocus="OnFocus" DisableUnderLine="true" />
		}
	</MudCardContent>

	@if (Full)
	{
		<MudCardActions>
			<MudButton OnClick="Delete" StartIcon="@Icons.Material.Outlined.Delete">Delete</MudButton>
		</MudCardActions>
	}
</MudCard>

@code {
	[CascadingParameter] MudDialogInstance MudDialog { get; set; }

	[Parameter]
	public bool Full { get; set; }

	[Parameter]
	public JournalEntry Model { get; set; }

	protected override void OnInitialized()
	{
		base.OnInitialized();

		FocusService.FocusChanged += (_, entry) =>
		{
			Full = entry == Model;
		};
	}

	async Task Delete()
	{
		if (await DialogService.ShowMessageBox("Delete entry", $"This entry from {Model.Date} will be deleted.", yesText: "Delete", noText: "Keep it") != true)
			return;

		Model.IsDeleted = true;
	}

	void OnFocus()
	{
		FocusService.ChangeFocus(Model);
	}
}