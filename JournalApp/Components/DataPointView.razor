@namespace JournalApp
@inject IDialogService DialogService

@if (DataPoint.DataType.HasFlag(DataType.Sleep))
{
	<div class="d-flex align-center flex-grow-1 gap-4">
		<MudSlider @bind-Value="DataPoint.SleepHours" Variant="Variant.Filled" Min="0" Max="24" Step="0.5m" />
		<MudText Typo="Typo.caption">@((DataPoint.SleepHours ?? 0).ToString("00.0"))</MudText>
	</div>
}
@if (DataPoint.DataType.HasFlag(DataType.Scale))
{
	<MudRating @bind-SelectedValue="DataPoint.ScaleIndex" Size="Size.Large" FullIcon="@Icons.Material.Filled.Circle" EmptyIcon="@Icons.Material.Outlined.Circle" Color="Color.Primary" />
}
@if (DataPoint.DataType.HasFlag(DataType.Bool))
{
	<MudCheckBox @bind-Checked="DataPoint.Bool" TriState="true" Color="Color.Primary" />
}
@if (DataPoint.DataType.HasFlag(DataType.Number))
{
	<MudNumericField @bind-Value="DataPoint.Number" HideSpinButtons="true" />
}
@if (DataPoint.DataType.HasFlag(DataType.Text))
{
	<div class="d-flex flex-column flex-grow-1 gap-2">
		<MudTextField @bind-Value="DataPoint.Text" Lines="4" Placeholder="What's on your mind?" Label="@(DataPoint.CreatedAt.ToString("h:mm tt"))" />

		<MudLink OnClick="EditTextInDialog">Edit...</MudLink>
	</div>
}

@code {
	[Parameter]
	public DataPoint DataPoint { get; set; }

	async Task EditTextInDialog()
	{
		await EditTextDialog.ShowDialog(DialogService, DataPoint);
	}
}